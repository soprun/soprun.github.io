header:
  title: Cбор Non-functional requirement (NFR)
  description: "Cбор non-functional-requirement"
  value:
  pain:
content:
  object: >-
  value: >-
  whom:
  initiator:


# http://sewiki.ru/%D0%9A%D0%B0%D1%82%D0%B5%D0%B3%D0%BE%D1%80%D0%B8%D1%8F:%D0%A2%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F

steps:
  - type: note
    time: ~
    replay: ~
    title: Non-functional requirement (NFR)
    description: >-
    workflow:
      - title: "Определяем список нефункциональных требований к проекту"
      - title: "Определяем список ограничений проекта"
      - title: "Например стратегические цели перехода на другой язык программирования"
      - title: "Определяем: Service Level Agreement, SLA"
      - title: "Определяем: SLO"
      - title: "Определяем: SLI"
      - title: "Определяем: Доступность нашего проекта в GEO регионах"
      - title: "Определяем: границы транзакций нашего сервиса"
      - title: "Определяем: Масштабируемость нашего продукта"
      - title: "Определяем: надёжность нашего продукта"
      - title: "Определяем: Производительность системы"
      - title: "Определяем: Производительность системы"
      - title: "Проводим анализ возможности соблюдения нефункциональных требований"
      - title: "доступность"
        description: "степень работоспособности и доступности решения для использования, часто выражается в процентах времени"
      - title: "совместимость"
        description: "степень успешности взаимодействия решения с другими окружающими компонентами (бизнес-процессами, информационными системами, аппаратным обеспечением и пр.);"
      - title: "функциональность"
        description: "степень соответствия функций решения потребностям пользователей, включая пригодность, точность, совместимость, т.е. корреляция с требованиями стейкхолдеров;"
      - title: "ремонтопригодность"
        description: "легкость изменения решения или его компонента, чтобы улучшить их, исправить ошибки или адаптировать к изменениям окружающей среды;"
      - title: "эффективность работы"
        description: "способность решения или его компонента выполнять свои целевые функции с минимальным потреблением ресурсов в контексте или временном периоде, например, в условиях пиковой нагрузки;"
      - title: "надежность"
        description: "способность решения или его компонента выполнять требуемые функции в определенных условиях в течение конкретного периода времени, например, наработка на отказ, измеряемая в часах и равная среднему времени работы устройства до сбоя;"
      - title: "масштабируемость"
        description: "способность решения расти или развиваться по мере роста объемов данных и количества пользователей;"
      - title: "расширяемость"
        description: "возможность добавления в решение новых функциональных возможностей. Это свойство тесно связано с архитектурой ПО, например, микросервисная архитектура проще поддается модификациям, чем «монолитная»."
      - title: "переносимость"
        description: "легкость переноса решения или его компонента из одной среды в другую, например, миграция на новую версию операционной системы или аппаратной платформы;"
      - title: "безопасность"
        description: "защита данных и компонентов решения от случайного или злонамеренного доступа, неправомерного использования, разрушения или раскрытия;"
      - title: "удобство использования"
        description: "легкость взаимодействия пользователя с решением, включая простоту ежедневной работы и обучения;"
      - title: "сертификация"
        description: "соответствие отдельным стандартам или отраслевым соглашениям;"
      - title: "соответствие"
        description: "нормативные, финансовые или правовые ограничения в зависимости от контекста и юрисдикции;"
      - title: "локализация"
        description: " адаптация текстовых и графических компонентов интерфейса, а также представления данных к языкам, законам, валютам и особенностям культуры пользователей в определенной местности или отрасли;"
      - title: "соглашения об уровне обслуживания между поставщиком и пользователем решения."
        description: "На практике это свойство тесно связано с доступностью, о чем мы поговорим далее."

footer:
  conclusions:
    - Контроль измерений позволяет лучше понимать, какие проблемы мы испытываем при управлении командой
  monitors:
    - CTO
    - Head
    - Project manager
  stability:
    - Проведение еженедельных мероприятий по контролю метрик
    - Привязка сбора и изменений метрик к определённым бизнес ролям
    - Вовлечение команды в улучшение показателей
  complexity:
    - Есть вероятность, что команде это может не понравиться
    - Head может не понимать ценность и не может управлять этим
    - Head не привязан к этим показателям, что приводит к выполнению задач не его роли
    - Дополнительный контроль задач, требуется ставить tag при создании задачи
  attention:
    - Важен ли этот показатель?
    - Можно ли его исчислить?
    - Поймут ли сотрудники такую статистику?
    - Отразит ли полученные цифры тот параметр которые нужен?
    - ------
    - Некорректное использование менеджера задач. Соблюдение командой времени оценки, переходов статусов, выставления ответственных за задачу
    - Может быть, разница восприятия этих метрик сотрудниками!
    - Требуется работа head и manager для доставки ценностей команде
    - Так как KPI зависит от результатов команды, есть возможность / вероятность манипулировать результатами! Например, задача не закончена, но разработчик изменил статус задачи на done.
    - Результат первичного применения может сильно отличаться в худшую сторону
    - То есть, команда думает, что она на 100% закрыла задачи, но, по факту, на 60% - и на начальном этапе это нормально, так как может быть разница в расчетах.
  kpi:
    measure:
      - Требуется согласовать квоту аномалий в компании при внедрении инструмента
      - Например, первичная оценка может до 20-40% быть аномалией и это нормально!
      - Head отвечает за контроль и улучшение показателей
      - Его задача проработать мероприятия по улучшению показателей
      - Его задача проработать мероприятия по выявлению причин ухудшения показателей
      - Измерить возможно по времени
      - Например, разница между первичной оценкой и оценкой спустя месяц должна быть меньше
      - В случае, если это не происходит, то должны быть мероприятия по анализу причин с привлечением других head
    measure_pattern:
    guide:
      - Кто и что измеряет?!
      - Кто ответственный за сбор
    responsible:
      - CTO - измерять эффективность работы IT-департамента
      - Head - измерять эффективность работы команды
      - Project manager - измерять эффективность работы проекта
  company:
    spiral_dynamics: >-
      **Культура успеха (оранжевый)**
      
      На этом уровне у сотрудников появляется возможность импровизировать и нарушать правила, если это ведет к достижению цели и успеху организации. Но при этом важно нести ответственность за нарушение. Лидер становится начальником.
      Его фокус внимания перемещается с процессов на стратегию, инновационные проекты и достижение целей. Управление процессами делегируется мидл-менеджменту. В системе управления появляется проектное управление, управление стратегией, целями такими, как BSC KPI MBO и Agile.
      На этом уровне команду переполняет предпринимательская драйв-энергия, стремление победить, создать лучшие продукты, стать первыми. Правила часто игнорируются, и в этом большой риск упасть на «красный» уровень культуры власти.
      Цели материальны: прибыль, маржа, EBITDA и так далее. Чрезмерное увлечение победами разрушает команду. Бизнес-подразделения становятся слишком обособленными, конфликтов вокруг ресурсов и побед становится больше. Люди не чувствуют удовольствие от материальных побед. Деньги, дом, квартира, инвестиции есть, а вот счастье — невсегда. Это предпосылки перехода на следующий уровень.
