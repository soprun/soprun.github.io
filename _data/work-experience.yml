- name: Like Центр
  site: https://likecentre.ru
  position: Technical Architect
  environment:
    - PHP 7-8+
    - Python
    - Node.js
    - Symfony
    - Laravel
    - MySQL
    - PostgreSQL
    - ClickHouse
    - Docker
    - GitLab CI/CD
    - Elasticsearch
    - RabbitMQ
    - Redis
    - Sentry
    - AWS
    - Yandex.Cloud
  architecture:
    - N-tier
    - Microservices
    - Event-driven
  responsibilities:
    - title: Основные задачи
      tasks:
        - Оценка рисков разработки функционала (RICE).
        - Представление архитектурных решений заказчику внутри компании.
        - Проведение анализа и аудита текущей архитектуры продуктов.
        - Проектирование архитектуры новых и текущих продуктов, создание Context Map используя Event Storming.
        - Подбор составляющих решения в зависимости от требований заказчика, анализ рынка, а далее планирование, подготовка и внедрение различных решений в продукты компании.
        - Принятие технических решений в проекте и сопровождение их реализации;
        - Декомпозиция решений до функциональных модулей (единиц развертывания).
        - Презентация и зашита архитектурных решений перед техническом комитентом.
        - Синхронизация архитектурных решений между командами и разрешение архитектурных разногласий и зависимостей.
        - Создание технических концепций, функциональные спецификации, формулирование нефункциональных требования.

    - title: Стратегическое планирование
      tasks:
        - Стратегическое планирование развития IT-департамента компании на полгода и год. На что необходимо сфокусироваться, что должны освоить, в техническом смысле как будут выглядите продукты компании.
        - Разработка технологической дорожной карты на Q1, Q2 детальный, а далее ключевые задачи учитывая roadmap бизнеса.

    - title: Управление командой разработки инфраструктуры
      tasks:
        - Техническое управление командой разработки инфраструктуры продуктов.
        - Планирование спринтов моей команды и других команд.
        - Постановка задач разработчикам моей команды и другим командам.
        - Реализация сложных задач по улучшению инфраструктуры продуктов компании.
        - Проектирование и участие в разработке систем ERP, CRM, LMS, LC, Auth service.
        - Ревью кода и контроль качества выполнения.
        - Консультация разработчиков, тестировщиков и DevOps-инженеров и других коллег по техническим вопросам.
        - Анализ причин возникновения ошибок при разработке и в работе систем.

    - title: Наставничество (менторство) / обучение
      tasks:
        - Внедрение best practices и различных методик разработки.
        - Создание учебной базы знаний и материалов по обучению Design Pattern, DDD, etc.
        - Разработка курса по DDD ориентированного на задачи и потребности компании.
        - Разработка системы и инструментов объективной оценки грейдов сотрудников и разработка системы аттестации сотрудников на повышение или подтверждение грейда.
        - Разработка инструментов автоматической аттестации с рекомендациями на изучение материалов если кандидат был в чём-то не селён в какой-то области.

    - title: Прочие
      tasks:
        - Собеседование и найм! А так же разработка инструмента для анкетирования кандидатов, обучение сотрудников по работе с инструментом.
        - Onboarding новых сотрудников (введение в доменную область), разработка инструментов для onboarding.

- name: Progressive Mind
  site: ~
  position: Senior Software Engineer
  environment:
    - Symfony
    - ReactPhp
    - React.js
    - Go
  architecture:
    - N-tier
    - Microservices
  responsibilities: [ ]

- name: Atlas Biomed Group
  site: https://atlas.ru
  position: Senior Software Engineer
  environment:
    - PHP
    - DDD
    - TDD
    - Symfony
    - PostgreSQL
    - Restful APIs, а именно JSON-LD (hypermedia)
  architecture:
    - Micro-services
    - Event-driven
  responsibilities:
    - title: Project
      tasks:
        - Tracking-сервис со скоринговыми методами, основанный на исследовании микробиоты.

    - title: Business requirement
      tasks:
        - Внедрение парадигм и практик DDD в рабочие процессы.
        - Обучение участников продукта единому языку.
        - Обучение разработчиков новым правилам, повышение их квалификации, независимость разработки с вовлечением в разные проекты, разные code-review.
        - Получил экспертизу Context Map компании, нескольких Bounded Context проекта.
        - Разработал архитектурное решение под задачи.
        - Разработал приложения, используя многоуровневый дизайн, изолирующий каждый из слоев направленной транзакцией.
        - Разработал и внедрил механизмы контроля обработки процедур и соответствующие определенным побочным правилам действия.

    - title: DDD
      tasks:
        - Разработал Shared kernel и базовые правила дизайна приложения без болезни наследования.
        - Domain Object (DO)
        - Null Object
        - Data Transfer Object (DTO)
        - DTO Assembler
        - Data Access Object (DAO)
        - Repository
        - и множество других типовых решений задач.

    - title: section
      tasks:
        - Разработал прикладной слой, механизмы и методы скоринга как последовательность цепочки, так и асинхронные методы для внешних систем.
        - Внедрил использование дизайна Action–domain–responder.
        - JSON:API был выбран за спецификацию, также автоматизировал JSON Schema, OpenAPI 3.
        - Внедрил методологию Git Flow и инструменты CI. Например, сбор changelog, упаковка релиза с подписью GPG или сертификатом разработчика.
        - Внедрил методологию комплексного юнит и интеграционного тестирования.

- name: Тинькофф Банк
  site: https://www.tinkoff.ru
  position: Senior Software Engineer
  environment:
    - PHP
    - DDD
    - TDD
    - Symfony
    - Restful APIs
  architecture:
    - N-tier
  responsibilities:
    - title: Project
      tasks:
        - Система управления и хранения "навыков" специалиста, интегрированная с call-center и web-office, позволяющая найти и определить компетенцию соответствующего специалиста.
        - Business requirement
        - Включить в рабочие процессы DDD практики, обучить команду и непосредственно разработка продукта.
        - Далее DNA... Sorry.

- name: TelemedHelp
  site: https://telemed.help
  position: Technical Architect
  environment:
    - PHP
    - Python
    - Node.js
    - Golang
    - Symfony
    - Silex
    - ReactPHP
    - Laravel
    - Percona
    - ClickHouse
    - Redis & Memcached
    - Elasticsearch
    - AWS cloud service
    - OpenAPI
    - Vault
    - Kubernetes
    - Docker
    - PHPUnit
    - Infection
    - CodeSniffer
    - Sentry
    - DDD
    - CQRS
  architecture:
    - N-tier
    - Microservices.
    - Event-driven architecture (EDA)
  responsibilities:
    - title: Project
      tasks:
        - Сервис телекоммуникации, рассчитанный на оказание услуг консультации врачом, назначения обследования, лечения и др.
    - title: Business requirement
      tasks:
        - Исходной MVP-версией занимался внешний подрядчик, моей целью было организовать управление и разработку backend отдела.
    - title: Part I - акт приема-передачи.
      tasks:
        - Исходной MVP-версией занимался внешний подрядчик, моей целью было организовать управление и разработку backend отдела.
        - Изучение документации и проверка работоспособности и валидности приложения.
        - Подготовил рекомендации для HR, проводил интервью с успешными кандидатами.
        - Контролировал прием готовой системы, и передачу технической экспертизы; первичное обучение и введение в проект.
        - Помогал в формировании Agile Scrum команды.
    - title: Part II - боль, смирение, взятие в работу.
      tasks:
        - Особенностью была скорая сдача заказчику (нам), и не сильная заботило качество и масштабируемость после MVP.
        - Решил критические недоработки MVP.
        - Сформировал и приманил Scrum-процессы для команды, внедряя DevOps, code-review, тестирование.
        - Определял требования, компоненты и инфраструктуру проекта.
        - Создал и организовал с бизнес-экспертами Context Map компании, выделили важные Bounded Context.
        - Выработал единый уникальный язык, словарь терминов и дополнительно Wiki, сильно сократив время на дополнительные проверки и упростив способы коммуникации.
    - title: Part III - Don't repeat yourself.
      tasks:
        - При появлении необходимости дополнительных ключевых возможностей от product-owners планировал и согласовывал новую дорожную карту, куда были внесены новые business-case.
        - Основными апексами качества продукта являлось сложность/стоимость, DevOps, устойчивость, масштабируемость и безопасность.
        - Применяя практики DDD были разработаны отдельные слабо связанные решения. Новые бизнес-задачи требовали как Event-driven архитектуры взаимодействия, так и отдельных Microservices решений.
        - Реализовал использование событий предметной области CQRS.
        - Внедрил методологию TDD.
        - Автоматизировал процессы контроля качества, unit и мутационного тестирования, разбор инцидента, системы мониторинга и логирования как неотъемлемой части процесса.
        - Разработал дизайн приложения и концепцию работы шаблонов проектирования, основанную на закономерностях использования имеющихся компонентов, применяя Transaction Script.
        - Разработал соответствующие законодательным нормам хранения персональных и медицинских данных архитектуру, дизайн системы шифрования и подписи критически важных медицинских данных.
        - Интегрировал различные подсистемы и внешние сервисы в инфраструктуру.
